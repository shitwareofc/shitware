#include "Head.h"
BOOL TeamCheck = false;//人物所处队伍变量
namespace CS2_SDK//开发者工具库(防止和基础函数冲突)
{
	HWND CS2_HWND = NULL;
	System::Memory CS2_MEM = { "cs2.exe" };
	auto Module_client = CS2_MEM.Get_Module("client.dll");//模块地址: 本地
	auto Module_engine = CS2_MEM.Get_Module("engine.dll");//模块地址: 引擎
	auto Module_server = CS2_MEM.Get_Module("server.dll");//模块地址: 服务器
	vector<short> Global_ValidClassID = { NULL };//有效实体
	BOOL Global_IsShowWindow = false, Global_TeamCheck = false;//窗口显示,团队过滤
	void ExecuteCommand(string Command_Str) noexcept//发送指令到CS控制台
	{
		COPYDATASTRUCT m_cData; m_cData.cbData = strlen(Command_Str.c_str()) + 1; m_cData.dwData = 0; m_cData.lpData = (void*)Command_Str.c_str();
		SendMessage(CS2_MEM.Get_ProcessHWND(), WM_COPYDATA, 0, (LPARAM)&m_cData);//发送命令
		//-----------------------------------------------------------------------------------
		if (Command_Str == "+jump")System::Key_Con_HWND(CS2_HWND, VK_SPACE, true);
		else if (Command_Str == "-jump")System::Key_Con_HWND(CS2_HWND, VK_SPACE, false);
		else if (Command_Str == "+duck")System::Key_Con_HWND(CS2_HWND, VK_CONTROL, true);
		else if (Command_Str == "-duck")System::Key_Con_HWND(CS2_HWND, VK_CONTROL, false);
		else if (Command_Str == "+lookatweapon")System::Key_Con_HWND(CS2_HWND, 0x46, true);
		else if (Command_Str == "-lookatweapon")System::Key_Con_HWND(CS2_HWND, 0x46, false);
		else if (Command_Str == "drop")System::Key_Click_HWND(CS2_HWND, 0x47, true);
		else if (Command_Str == "+attack")mouse_event(MOUSEEVENTF_LEFTDOWN, 0, 0, 0, 0);
		else if (Command_Str == "-attack")mouse_event(MOUSEEVENTF_LEFTUP, 0, 0, 0, 0);
		else if (Command_Str == "+attack2")mouse_event(MOUSEEVENTF_RIGHTDOWN, 0, 0, 0, 0);
		else if (Command_Str == "-attack2")mouse_event(MOUSEEVENTF_RIGHTUP, 0, 0, 0, 0);
		else if (Command_Str == "+forward")System::Key_Con_HWND(CS2_HWND, 0x57, true);
		else if (Command_Str == "-forward")System::Key_Con_HWND(CS2_HWND, 0x57, false);
		else if (Command_Str == "+back")System::Key_Con_HWND(CS2_HWND, 0x53, true);
		else if (Command_Str == "-back")System::Key_Con_HWND(CS2_HWND, 0x53, false);
		else if (Command_Str == "+left")System::Key_Con_HWND(CS2_HWND, 0x41, true);
		else if (Command_Str == "-left")System::Key_Con_HWND(CS2_HWND, 0x41, false);
		else if (Command_Str == "+right")System::Key_Con_HWND(CS2_HWND, 0x44, true);
		else if (Command_Str == "-right")System::Key_Con_HWND(CS2_HWND, 0x44, false);
		//-----------------------------------------------------------------------------------
	}
	namespace CS2_Offsets//CS2固定偏移量 (游戏更新时需要同时更新 https://github.com/a2x/cs2-dumper.git)
	{
		string Offsets_Date = "[2025-01-22 17:40]";
		uintptr_t dwLocalPlayerController = 0x1A6A210;
		uintptr_t dwLocalPlayerPawn = 0x186DE00;
		uintptr_t dwEntityList = 0x1A197E8;
		uintptr_t dwViewAngles = 0x1A8E9A0;
		uintptr_t dwViewMatrix = 0x1A84890;
		uintptr_t m_hPlayerPawn = 0x80C;
		uintptr_t m_iTeamNum = 0x3E3;
		uintptr_t m_ArmorValue = 0x241C;
		uintptr_t m_iHealth = 0x344;
		uintptr_t m_iIDEntIndex = 0x1458;
		uintptr_t m_fFlags = 0x3EC;
		uintptr_t m_iShotsFired = 0x23FC;
		uintptr_t m_vecVelocity = 0x400;
		uintptr_t m_bSpotted = 0x23D8;//m_entitySpottedState + m_bSpotted
		uintptr_t m_bIsScoped = 0x23E8;
		uintptr_t m_pClippingWeapon = 0x13A0;
		uintptr_t m_pGameSceneNode = 0x328;
		uintptr_t m_vecOrigin = 0x88;
		uintptr_t m_aimPunchCache = 0x15A8;
		uintptr_t m_vecViewOffset = 0xCB0;
		uintptr_t m_dwBoneMatrix = 0xB800;//m_modelState + 0x80
		uintptr_t m_iszPlayerName = 0x660;
		uintptr_t m_pActionTrackingServices = 0x730;
		uintptr_t m_iNumRoundKills = 0x110;
		uintptr_t m_unTotalRoundDamageDealt = 0x118;
		uintptr_t m_iItemDefinitionIndex = 0x1352;//m_AttributeManager + m_Item + m_iItemDefinitionIndex
		uintptr_t m_angEyeAngles = 0x1438;
	}
	namespace Base//基础内存函数
	{
		uintptr_t EntityList() noexcept { return CS2_MEM.Read<uintptr_t>(Module_client + CS2_Offsets::dwEntityList); }//实体列表
		uintptr_t Convert(uintptr_t EntityList, uintptr_t Player) noexcept { return CS2_MEM.Read<uintptr_t>(CS2_MEM.Read<uintptr_t>(EntityList + 8 * ((Player & 0x7FFF) >> 9) + 16) + 120 * (Player & 0x1FF)); }//各种转换
		class PlayerPawn//玩家Pawn内存类
		{
		private:uintptr_t m_PlayerPawn; public:PlayerPawn(uintptr_t dwPlayerPawn) noexcept { m_PlayerPawn = dwPlayerPawn; };
			   uintptr_t Pawn() const noexcept { return m_PlayerPawn; }//人物地址
			   short Health() const noexcept { return CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_iHealth); }//人物血量
			   short Armor() const noexcept { return CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_ArmorValue); }//人物护甲
			   short TeamNumber() const noexcept { return CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_iTeamNum); }//人物队伍
			   short IDEntIndex() const noexcept { return CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_iIDEntIndex); }//人物瞄准的实体ID
			   PlayerPawn IDEntIndex_Pawn() const noexcept//瞄准实体的人物Pawn
			   {
				   const auto Index = CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_iIDEntIndex);
				   if (Index <= 10000)return Convert(EntityList(), Index); else return 0;
			   }
			   short Flags() const noexcept { return CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_fFlags); }//人物状态 (跳跃,蹲下等动作)
			   short ShotsFired() const noexcept { return CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_iShotsFired); }//人物开枪子弹数量
			   short Spotted() const noexcept { return CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_bSpotted); }//人物发现状态
			   short Scoped() const noexcept { const auto Scoped = CS2_MEM.Read<short>(m_PlayerPawn + CS2_Offsets::m_bIsScoped); if (Scoped == 65536)return 0; else return Scoped; }//人物狙击枪开镜
			   short ActiveWeapon(BOOL Type = 0) const noexcept//人物手持武器(类型,ID)
			   {
				   const auto ClippingWeapon = CS2_MEM.Read<short>(CS2_MEM.Read<uintptr_t>(m_PlayerPawn + CS2_Offsets::m_pClippingWeapon) + CS2_Offsets::m_iItemDefinitionIndex);
				   if (Type)//武器类型 0:无效 1:手枪 2:连射枪 3:狙击枪 4:霰弹枪
				   {
					   switch (ClippingWeapon)
					   {
					   case 1: return 1;
					   case 2: return 1;
					   case 3: return 1;
					   case 4: return 1;
					   case 7: return 2;
					   case 8: return 2;
					   case 9: return 3;
					   case 10: return 2;
					   case 11: return 3;
					   case 13: return 2;
					   case 14: return 2;
					   case 16: return 2;
					   case 17: return 2;
					   case 19: return 2;
					   case 23: return 2;
					   case 24: return 2;
					   case 25: return 4;
					   case 26: return 2;
					   case 27: return 4;
					   case 28: return 2;
					   case 29: return 4;
					   case 30: return 1;
					   case 32: return 1;
					   case 33: return 2;
					   case 34: return 2;
					   case 35: return 4;
					   case 36: return 1;
					   case 38: return 3;
					   case 39: return 2;
					   case 40: return 3;
					   case 60: return 2;
					   case 61: return 1;
					   case 63: return 1;
					   case 64: return 1;
					   default: return 0;
					   }
				   }
				   else return ClippingWeapon;
			   }
			   short ActiveWeaponDamage() const noexcept//人物手持武器命中胸部时预计伤害值 (如果目标只剩些返回值那些血量那么打身体一击毙命)
			   {
				   const auto ClippingWeapon = CS2_MEM.Read<short>(CS2_MEM.Read<uintptr_t>(m_PlayerPawn + CS2_Offsets::m_pClippingWeapon) + CS2_Offsets::m_iItemDefinitionIndex);
				   switch (ClippingWeapon)
				   {
				   case 1: return 35;
				   case 2: return 12;
				   case 3: return 20;
				   case 4: return 10;
				   case 7: return 25;
				   case 8: return 21;
				   case 9: return 80;
				   case 10: return 16;
				   case 11: return 50;
				   case 13: return 20;
				   case 14: return 23;
				   case 16: return 22;
				   case 17: return 11;
				   case 19: return 11;
				   case 23: return 11;
				   case 24: return 15;
				   case 25: return 30;
				   case 26: return 11;
				   case 27: return 30;
				   case 28: return 15;
				   case 29: return 15;
				   case 30: return 16;
				   case 32: return 13;
				   case 33: return 11;
				   case 34: return 12;
				   case 35: return 30;
				   case 36: return 15;
				   case 38: return 50;
				   case 39: return 20;
				   case 40: return 60;
				   case 60: return 17;
				   case 61: return 15;
				   case 63: return 6;
				   case 64: return 30;
				   default: return 20;
				   }
			   }
			   float MoveSpeed() const noexcept { const auto Velocity = CS2_MEM.Read<Variable::Vector3>(m_PlayerPawn + CS2_Offsets::m_vecVelocity); return hypot(Velocity.x, Velocity.y); }//人物移动速度
			   string ActiveWeaponName(BOOL Use_WeaponBase = false, uintptr_t WeaponBase = 0) const noexcept//人物手持武器名称
			   {
				   auto ClippingWeapon = CS2_MEM.Read<short>(CS2_MEM.Read<uintptr_t>(m_PlayerPawn + CS2_Offsets::m_pClippingWeapon) + CS2_Offsets::m_iItemDefinitionIndex);
				   if (Use_WeaponBase)ClippingWeapon = CS2_MEM.Read<short>(WeaponBase + CS2_Offsets::m_iItemDefinitionIndex);
				   if (ClippingWeapon >= 500 && ClippingWeapon <= 600)return "KNIFE";
				   switch (ClippingWeapon)
				   {
				   case 1: return "DEAGLE";
				   case 2: return "DUAL BERETTAS";
				   case 3: return "FN57";
				   case 4: return "GLOCK";
				   case 7: return "AK47";
				   case 8: return "AUG";
				   case 9: return "AWP";
				   case 10: return "FAMAS";
				   case 11: return "G3SG1";
				   case 13: return "GALILAR";
				   case 14: return "M249";
				   case 16: return "M4A1";
				   case 17: return "MAC10";
				   case 19: return "P90";
				   case 23: return "MP5";
				   case 24: return "UMP45";
				   case 25: return "XM1014";
				   case 26: return "BIZON";
				   case 27: return "MAG7";
				   case 28: return "NEGEV";
				   case 29: return "SAWED";
				   case 30: return "TEC9";
				   case 31: return "TASER";
				   case 32: return "P2000";
				   case 33: return "MP7";
				   case 34: return "MP9";
				   case 35: return "NOVA";
				   case 36: return "P250";
				   case 38: return "SCAR20";
				   case 39: return "SG553";
				   case 40: return "SSG08";
				   case 42: return "KNIFE";
				   case 43: return "FLASH";
				   case 44: return "GRENADE";
				   case 45: return "SMOKE";
				   case 46: return "MOLOTOV";
				   case 47: return "DECOY";
				   case 48: return "INCGRNNADE";
				   case 49: return "C4";
				   case 59: return "KNIFE";
				   case 60: return "M4A1-S";
				   case 61: return "USP-S";
				   case 63: return "CZ75";
				   case 64: return "REVOLVER";
				   default: return "NONE";
				   }
			   }
			   string EntityName() const noexcept { return CS2_MEM.Read_str(CS2_MEM.Read<uintptr_t>(CS2_MEM.Read<uintptr_t>(m_PlayerPawn + 0x10) + 0x20)); }//实体名称(非人物)
			   Variable::Vector3 Velocity() const noexcept { return CS2_MEM.Read<Variable::Vector3>(m_PlayerPawn + CS2_Offsets::m_vecVelocity); }//人物单方向移动速度
			   Variable::Vector3 Origin() const noexcept { return CS2_MEM.Read<Variable::Vector3>(CS2_MEM.Read<uintptr_t>(m_PlayerPawn + CS2_Offsets::m_pGameSceneNode) + CS2_Offsets::m_vecOrigin); }//人物世界坐标
			   Variable::Vector3 AimPunchAngle() const noexcept//人物手持武器后坐力
			   {
				   struct UtlVec { DWORD64 count; DWORD64 data; }; const auto PunchCache = CS2_MEM.Read<UtlVec>(m_PlayerPawn + CS2_Offsets::m_aimPunchCache);//后座缓存
				   if (PunchCache.count > 0 && PunchCache.count < 0xFFFF)return CS2_MEM.Read<Variable::Vector3>(PunchCache.data + (PunchCache.count - 1) * sizeof(Variable::Vector3));
			   }
			   Variable::Vector3 ViewOffset() const noexcept { return CS2_MEM.Read<Variable::Vector3>(m_PlayerPawn + CS2_Offsets::m_vecViewOffset); }//人物朝向偏移
			   Variable::Vector3 BonePos(short Bone_ID = 3) const noexcept//人物骨骼坐标
			   {
				   const auto BoneMatrix = CS2_MEM.Read<uintptr_t>(CS2_MEM.Read<uintptr_t>(m_PlayerPawn + CS2_Offsets::m_pGameSceneNode) + CS2_Offsets::m_dwBoneMatrix);
				   return CS2_MEM.Read<Variable::Vector3>(BoneMatrix + Bone_ID * 0x20);
			   }
			   Variable::Vector3 ViewAngles() const noexcept { return CS2_MEM.Read<Variable::Vector3>(m_PlayerPawn + CS2_Offsets::m_angEyeAngles); }//人物朝向角度
		};
		PlayerPawn LocalPlayer() noexcept { return CS2_MEM.Read<uintptr_t>(Module_client + CS2_Offsets::dwLocalPlayerPawn); }//本地人物
		uintptr_t LocalPlayerController() noexcept { return CS2_MEM.Read<uintptr_t>(Module_client + CS2_Offsets::dwLocalPlayerController); }//本地人物控制器
		Variable::Vector3 ViewAngles() noexcept { return CS2_MEM.Read<Variable::Vector3>(Module_client + CS2_Offsets::dwViewAngles); }//本地人物朝向
		Variable::view_matrix_t ViewMatrix() noexcept { return CS2_MEM.Read<Variable::view_matrix_t>(Module_client + CS2_Offsets::dwViewMatrix); }//本地人物视觉矩阵(用于制作ESP)
	}
	Base::PlayerPawn Global_LocalPlayer = NULL;//本地人物地址
	namespace Advanced//进阶内存扩展函数
	{
		Base::PlayerPawn Traverse_Player(short i, BOOL ReturnPlayerController = false) noexcept//遍历人物Pawn
		{
			const auto Entitylist = Base::EntityList();
			const auto PlayerController = Base::Convert(Entitylist, i);
			if (ReturnPlayerController)return PlayerController;
			return Base::Convert(Entitylist, CS2_MEM.Read<uint32_t>(PlayerController + CS2_Offsets::m_hPlayerPawn));
		}
		string LocalPlayer_Name() noexcept//本地人物名称
		{
			const auto LocalPlayerName = CS2_MEM.Read_str(Base::LocalPlayerController() + CS2_Offsets::m_iszPlayerName);
			static string ReturnValue = "None"; if (LocalPlayerName != "")ReturnValue = LocalPlayerName;
			return ReturnValue;
		}
		string Player_Name(short i) noexcept//通过ClassID获取名称
		{
			const auto PlayerController = Base::Convert(Base::EntityList(), i);
			if (!PlayerController)return "None";
			else return CS2_MEM.Read_str(PlayerController + CS2_Offsets::m_iszPlayerName);
		}
		BOOL Check_Enemy(Base::PlayerPawn PlayerPawn) noexcept { return (PlayerPawn.Pawn() != Global_LocalPlayer.Pawn() && PlayerPawn.Health() > 0 && (!Global_TeamCheck || Global_LocalPlayer.TeamNumber() != PlayerPawn.TeamNumber()) && PlayerPawn.TeamNumber() != 1); }//判断人物是否是敌人
		BOOL Stop_Move(short TriggerValue = 65, BOOL Movement = true) noexcept//急停
		{
			const auto LocalVel = Global_LocalPlayer.Velocity();
			if (hypot(LocalVel.x, LocalVel.y) <= TriggerValue)return true;//当精准则返回真
			if (Movement)//停止移动 反之只返回是否精准
			{
				const auto LocalYaw = Base::ViewAngles().y;
				const auto X = (LocalVel.x * cos(LocalYaw / 180 * 3.1415926) + LocalVel.y * sin(LocalYaw / 180 * 3.1415926));
				const auto Y = (LocalVel.y * cos(LocalYaw / 180 * 3.1415926) - LocalVel.x * sin(LocalYaw / 180 * 3.1415926));
				ExecuteCommand("-back"); ExecuteCommand("-forward"); ExecuteCommand("-right"); ExecuteCommand("-left");
				if (X > 30) { ExecuteCommand("+back"); Sleep(1); ExecuteCommand("-back"); }
				else if (X < -30) { ExecuteCommand("+forward"); Sleep(1); ExecuteCommand("-forward"); }
				if (Y > 30) { ExecuteCommand("+right"); Sleep(1); ExecuteCommand("-right"); }
				else if (Y < -30) { ExecuteCommand("+left"); Sleep(1); ExecuteCommand("-left"); }
			}
			return false;
		}
		short Local_RoundDamage(BOOL Return_Kill = false) noexcept//回合伤害和击杀数
		{
			const auto Local_RoundValue = CS2_MEM.Read<uintptr_t>(Base::LocalPlayerController() + CS2_Offsets::m_pActionTrackingServices);
			if (Return_Kill)return CS2_MEM.Read<short>(Local_RoundValue + CS2_Offsets::m_iNumRoundKills);
			else return CS2_MEM.Read<short>(Local_RoundValue + CS2_Offsets::m_unTotalRoundDamageDealt);
		}
		void Move_to_Angle(Variable::Vector3 Target_Angles = { 0,0,0 }, float Smooth = 40, float Offset = 0.3, short Traversals_Mum = 5) noexcept//本地人物将视角移动到指定坐标
		{
			for (int i = 0; i <= Traversals_Mum; ++i)
			{
				const auto LocalPlayer_Angle = Base::ViewAngles();//本地人物朝向
				if (hypot(LocalPlayer_Angle.x - Target_Angles.x, LocalPlayer_Angle.y - Target_Angles.y) <= Offset)return;
				System::Mouse_Move((-Target_Angles.y + LocalPlayer_Angle.y) * Smooth, (Target_Angles.x - LocalPlayer_Angle.x) * Smooth);
				if (Traversals_Mum != 1)Sleep(1);
			}
		}
		BOOL Move_to_Pos(Variable::Vector3 Target_Pos = { 0,0,0 }, float Edge = 8) noexcept//本地人物移动到指定世界坐标
		{
			const auto LocalPlayer_Pos = Global_LocalPlayer.Origin();//本地人物所处世界坐标
			const auto Target_Distance = hypot(LocalPlayer_Pos.x - Target_Pos.x, LocalPlayer_Pos.y - Target_Pos.y);//计算与目标坐标的距离
			if (Target_Distance <= Edge)return true;//达到边缘则不进行移动
			auto Offset_Angle = Base::ViewAngles().y - Variable::Pos_Angle(LocalPlayer_Pos, Target_Pos); if (Offset_Angle < 0)Offset_Angle += 360;//角度偏移
			if (Offset_Angle > 315 - 15 || Offset_Angle < 45 + 15)ExecuteCommand("+forward");
			else ExecuteCommand("-forward");
			if (Offset_Angle > 45 - 15 && Offset_Angle < 135 + 15)ExecuteCommand("+right");
			else ExecuteCommand("-right");
			if (Offset_Angle > 135 - 15 && Offset_Angle < 225 + 15)ExecuteCommand("+back");
			else ExecuteCommand("-back");
			if (Offset_Angle > 225 - 15 && Offset_Angle < 315 + 15)ExecuteCommand("+left");
			else ExecuteCommand("-left");
			if (Target_Distance <= Edge * 2)//降低移动速度
			{
				Sleep(1);//按键缓冲
				ExecuteCommand("-forward");
				ExecuteCommand("-right");
				ExecuteCommand("-back");
				ExecuteCommand("-left");//释放所有按键
			}
			return false;//未移动到目标坐标
		}
		vector<Variable::Vector3> MovingPath_Map(short MapID = 0) noexcept//地图移动路径
		{
			if (MapID == 0)return {//Dust2
{266.2,2547.0,-115.4},
{226.4,2465.9,-122.0},
{170.2,2315.8,-119.0},
{74.8,2192.1,-125.0},
{-42.6,2156.8,-127.9},
{-205.9,2152.3,-126.3},
{-325.2,2216.1,-124.7},
{-404.6,2314.9,-110.9},
{-530.3,2376.9,-103.2},
{-683.4,2382.6,-103.6},
{-809.1,2382.5,-71.7},
{-928.5,2395.2,-49.5},
{-1049.6,2416.1,-0.9},
{-1172.4,2393.7,25.2},
{-1250.2,2308.1,9.3},
{-1301.3,2231.5,1.9},
{-1359.3,2162.3,2.1},
{-1458.9,2110.0,1.1},
{-1566.2,2068.7,-3.0},
{-1681.3,2027.2,-6.1},
{-1778.0,1991.2,-2.9},
{-1881.9,1929.8,-0.4},
{-1957.0,1838.3,20.5},
{-1983.5,1733.0,31.5},
{-1986.2,1617.7,31.4},
{-1986.1,1508.2,31.6},
{-1981.2,1390.7,28.5},
{-1943.6,1287.4,30.4},
{-1867.2,1204.9,32.1},
{-1773.3,1151.4,32.1},
{-1683.5,1071.4,31.4},
{-1664.1,956.9,30.0},
{-1665.3,836.9,31.1},
{-1671.2,735.0,31.1},
{-1693.7,622.9,31.6},
{-1732.2,521.8,34.0},
{-1785.6,415.4,1.9},
{-1838.2,314.5,0.0},
{-1870.9,214.5,3.6},
{-1896.6,99.7,3.1},
{-1918.0,-22.1,-0.5},
{-1929.8,-133.8,4.7},
{-1936.2,-241.3,29.2},
{-1942.3,-361.4,61.2},
{-1947.4,-472.3,90.9},
{-1950.0,-583.6,119.7},
{-1922.6,-696.4,124.8},
{-1843.0,-782.4,117.7},
{-1722.6,-837.1,114.9},
{-1601.3,-869.1,116.4},
{-1482.9,-883.6,116.8},
{-1363.3,-895.1,116.7},
{-1255.9,-904.4,117.0},
{-1142.1,-911.3,118.7},
{-1031.4,-916.8,120.5},
{-926.5,-920.7,120.9},
{-808.2,-922.2,120.7},
{-694.1,-922.8,121.0},
{-578.9,-923.0,121.0},
{-468.8,-922.8,108.9},
{-348.5,-922.5,83.4},
{-239.1,-922.3,57.1},
{-132.9,-920.1,29.9},
{-26.4,-897.0,5.2},
{67.8,-825.7,-8.4},
{134.4,-736.2,-7.5},
{198.7,-624.2,3.9},
{253.0,-519.1,-1.3},
{304.5,-407.4,0.3},
{353.2,-300.5,2.3},
{401.4,-194.7,-3.6},
{451.3,-84.7,-5.3},
{500.3,23.3,-4.9},
{543.9,119.9,-4.6},
{588.2,217.9,-0.7},
{647.0,313.3,1.0},
{681.3,411.5,0.8},
{645.8,521.0,0.9},
{606.6,633.9,1.1},
{623.9,746.8,0.9},
{709.4,812.1,0.1},
{806.4,870.2,0.0},
{930.8,900.5,0.5},
{1051.9,900.2,-0.4},
{1161.7,905.5,-0.4},
{1259.6,947.3,-0.3},
{1335.8,1036.4,-7.5},
{1374.1,1137.1,-8.8},
{1393.0,1247.6,-10.3},
{1401.5,1389.7,-9.5},
{1404.9,1519.4,-6.9},
{1407.8,1629.7,-6.7},
{1410.7,1738.5,-7.9},
{1413.8,1852.3,-8.7},
{1416.8,1962.4,-9.2},
{1419.9,2076.3,-9.3},
{1423.0,2191.2,-8.0},
{1426.3,2315.3,6.6},
{1429.2,2426.8,30.7},
{1429.4,2542.1,59.9},
{1427.9,2669.1,89.6},
{1427.5,2781.9,110.2},
{1423.2,2885.6,116.1},
{1360.8,2975.6,121.4},
{1250.2,2973.4,128.2},
{1165.0,2902.9,127.9},
{1101.7,2797.9,127.0},
{1027.8,2705.1,96.0},
{935.6,2651.4,96.1},
{833.7,2607.4,94.8},
{728.5,2564.8,94.5},
{621.3,2523.5,96.0},
{528.5,2486.8,96.2},
{438.5,2412.5,95.5},
{402.1,2300.4,95.7},
{384.6,2178.3,95.9},
{369.4,2056.8,95.5},
{357.6,1950.0,96.0},
{352.8,1829.2,95.6},
{354.1,1716.9,72.1},
{355.3,1601.8,3.4},
{320.0,1489.6,1.3},
{206.0,1430.5,-0.5},
{101.6,1420.4,-0.4},
{-20.7,1410.3,-0.5},
{-123.1,1355.5,0.0},
{-176.2,1248.0,0.3},
{-187.1,1135.4,-0.6},
{-186.6,1010.8,1.6},
{-182.4,900.4,0.9},
{-187.8,774.9,1.7},
{-235.2,668.5,2.0},
{-300.3,571.5,-1.8},
{-351.0,471.9,-4.5},
{-394.0,355.8,-1.7},
{-416.0,252.1,-0.5},
{-405.0,135.2,0.1},
{-405.0,10.2,0.2},
{-405.0,-108.9,-0.5},
{-404.9,-222.8,0.7},
{-395.1,-327.7,1.3},
{-372.2,-449.7,9.0},
{-285.4,-517.2,0.6},
{-163.4,-542.5,0.7},
{-49.1,-547.5,1.8},
{70.2,-528.3,1.3},
{167.4,-450.4,0.9},
{226.2,-356.0,0.1},
{274.1,-248.4,0.8},
{286.4,-118.6,-1.3},
{280.3,-4.3,0.0},
{258.7,123.1,2.5},
{207.2,229.9,9.0},
{124.7,310.3,-0.2},
{8.0,366.6,-1.4},
{-95.9,403.7,-1.3},
{-198.9,449.6,-1.3},
{-291.8,533.4,-2.6},
{-338.3,648.6,-0.4},
{-357.8,785.8,-1.4},
{-365.4,897.1,-30.9},
{-372.4,1019.0,-57.9},
{-378.2,1133.8,-89.9},
{-383.3,1255.5,-118.2},
{-387.6,1379.1,-126.4},
{-391.9,1498.2,-126.3},
{-398.4,1592.7,-126.4},
{-466.6,1683.5,-124.8},
{-497.1,1800.0,-121.5},
{-503.1,1922.5,-121.7},
{-512.4,2037.1,-121.4},
{-561.5,2145.2,-120.1},
{-653.6,2212.1,-120.9},
{-786.4,2253.1,-106.6},
{-895.4,2280.2,-74.6},
{-1014.2,2299.2,-35.1},
{-1143.5,2300.4,4.8},
{-1244.8,2294.9,7.7},
{-1291.2,2237.0,2.3},
{-1351.5,2158.8,2.1},
{-1461.0,2093.4,1.5},
{-1582.4,2061.4,-3.7},
{-1709.3,2018.7,-5.7},
{-1812.0,1972.1,-1.7},
{-1908.8,1900.9,0.1},
{-1970.9,1800.8,33.0},
{-1987.7,1689.3,31.5},
{-1990.0,1569.4,31.5},
{-1987.7,1448.7,30.3},
{-1962.9,1328.2,28.9},
{-1898.3,1226.4,31.8},
{-1793.4,1169.0,32.3},
{-1671.5,1141.7,31.0},
{-1550.1,1123.4,34.8},
{-1427.6,1107.1,36.0},
{-1311.0,1095.2,34.6},
{-1177.8,1107.4,-3.3},
{-1105.2,1171.5,-53.6},
{-1056.6,1282.4,-110.8},
{-1021.6,1394.5,-112.8},
{-914.9,1449.4,-112.4},
{-795.3,1453.1,-112.1},
{-671.1,1443.8,-113.6},
{-555.6,1434.9,-112.7},
{-430.6,1455.9,-126.5},
{-365.5,1537.8,-126.3},
{-397.2,1629.2,-126.4},
{-470.0,1691.9,-124.5},
{-472.0,1813.1,-124.0},
{-437.6,1911.2,-126.3},
{-368.0,2011.8,-127.1},
{-280.1,2069.4,-127.5},
{-176.4,2108.0,-126.2},
{-65.1,2136.5,-126.9},
{60.1,2180.8,-126.3},
{144.8,2264.8,-125.4},
{200.1,2368.8,-120.0},
{238.8,2466.5,-122.0},
{268.9,2547.0,-115.5}
			};
			else if (MapID == 1)return {//Mirage
{1258.6,-164.2,-168.0},
{1259.2,15.9,-168.0},
{1268.2,163.0,-168.0},
{1255.9,318.3,-232.0},
{1168.1,432.8,-263.1},
{1048.9,513.8,-262.6},
{913.2,582.4,-248.2},
{762.8,615.5,-156.5},
{623.2,635.0,-136.0},
{598.5,661.7,-136.0},
{592.1,690.9,-136.0},
{584.8,736.3,-136.0},
{578.4,776.4,-136.0},
{495.9,814.7,-136.0},
{369.0,807.9,-136.0},
{210.9,809.2,-136.0},
{71.4,812.9,-136.0},
{-48.9,812.8,-136.0},
{-160.5,810.9,-135.8},
{-250.5,762.2,-126.5},
{-266.7,611.3,-77.3},
{-381.5,552.0,-80.0},
{-485.7,565.4,-80.5},
{-624.0,574.8,-81.1},
{-743.2,574.0,-81.9},
{-865.1,571.3,-82.0},
{-988.1,568.9,-80.0},
{-1092.8,615.8,-80.0},
{-1166.3,698.6,-80.0},
{-1282.1,731.3,-80.0},
{-1401.8,732.8,-65.5},
{-1518.9,733.7,-48.0},
{-1624.9,736.5,-48.0},
{-1747.1,741.8,-48.0},
{-1855.1,747.1,-48.0},
{-1975.2,745.3,-48.0},
{-2079.4,717.7,-44.0},
{-2203.7,599.6,-147.1},
{-2327.8,464.7,-168.0},
{-2344.2,375.7,-168.0},
{-2341.5,258.7,-168.0},
{-2337.7,132.8,-168.0},
{-2334.4,-6.1,-166.7},
{-2334.0,-133.8,-164.3},
{-2334.5,-259.1,-167.9},
{-2334.5,-397.4,-168.0},
{-2310.8,-516.4,-168.0},
{-2209.3,-583.4,-168.0},
{-2067.8,-596.9,-168.0},
{-1921.0,-605.8,-168.0},
{-1798.3,-617.4,-168.0},
{-1672.2,-645.3,-168.0},
{-1595.0,-738.6,-168.0},
{-1592.2,-878.9,-171.4},
{-1602.0,-1018.0,-210.0},
{-1609.4,-1138.7,-239.5},
{-1615.8,-1260.0,-260.8},
{-1622.3,-1387.3,-264.9},
{-1628.1,-1521.5,-264.1},
{-1632.4,-1648.6,-264.3},
{-1636.4,-1783.9,-266.6},
{-1791.5,-1807.7,-264.0},
{-1941.8,-1809.6,-280.7},
{-1963.4,-1958.1,-285.2},
{-1823.7,-1977.7,-264.9},
{-1685.6,-1985.0,-267.8},
{-1626.3,-2073.0,-260.7},
{-1568.2,-2184.3,-252.6},
{-1466.0,-2270.3,-242.2},
{-1360.4,-2320.4,-217.9},
{-1238.0,-2348.0,-191.6},
{-1108.7,-2364.1,-168.0},
{-988.6,-2369.4,-168.0},
{-853.3,-2360.8,-169.1},
{-721.2,-2319.1,-179.0},
{-592.1,-2280.4,-176.7},
{-464.1,-2247.1,-174.0},
{-336.1,-2212.5,-171.4},
{-227.2,-2174.4,-169.9},
{-146.4,-2084.1,-168.0},
{-143.9,-1966.1,-168.0},
{-142.7,-1839.2,-168.0},
{-100.5,-1725.1,-168.0},
{-1.3,-1647.5,-168.0},
{108.7,-1587.9,-172.4},
{245.1,-1549.3,-176.0},
{355.2,-1572.5,-189.6},
{462.0,-1604.8,-243.0},
{587.4,-1580.8,-264.0},
{643.4,-1471.2,-263.9},
{668.0,-1334.8,-263.5},
{704.2,-1223.9,-260.0},
{798.9,-1135.8,-260.5},
{924.2,-1110.1,-263.6},
{1064.3,-1083.5,-263.5},
{1133.1,-998.7,-259.8},
{1159.5,-878.2,-258.5},
{1170.9,-766.7,-241.2},
{1172.5,-643.2,-215.0},
{1170.0,-526.7,-189.2},
{1175.0,-418.0,-164.0},
{1257.2,-362.9,-164.0},
{1326.6,-454.4,-168.0},
{1339.5,-571.5,-168.0},
{1341.6,-688.6,-168.0},
{1342.8,-822.8,-168.0},
{1344.2,-935.6,-168.0},
{1345.8,-1062.1,-168.0},
{1346.2,-1182.8,-168.0},
{1344.1,-1307.6,-168.0},
{1290.4,-1422.3,-168.0},
{1182.7,-1435.9,-168.0},
{1074.6,-1437.0,-168.0},
{969.4,-1510.6,-160.9},
{969.6,-1629.6,-120.0},
{972.0,-1752.3,-72.0},
{968.5,-1877.2,-72.0},
{962.3,-2003.9,-72.0},
{945.6,-2123.2,-40.0},
{875.4,-2241.7,-40.0},
{776.8,-2285.1,-40.0},
{656.5,-2292.8,-40.0},
{532.7,-2295.0,-40.0},
{393.8,-2299.7,-40.0},
{279.2,-2304.3,-40.0},
{160.1,-2308.1,-40.0},
{54.5,-2263.9,-40.0},
{43.5,-2153.6,-40.0},
{33.6,-2038.9,-40.0},
{-56.7,-1986.6,-40.0},
{-185.7,-1923.7,-151.5},
{-265.9,-1882.3,-168.0},
{-364.2,-1829.8,-169.2},
{-471.8,-1771.2,-176.2},
{-579.9,-1699.8,-175.5},
{-648.1,-1594.8,-168.0},
{-670.4,-1464.3,-168.0},
{-673.1,-1342.8,-168.0},
{-673.1,-1221.2,-168.0},
{-672.4,-1084.1,-189.9},
{-671.5,-941.0,-216.0},
{-670.5,-826.0,-264.0},
{-613.5,-701.6,-269.3},
{-475.8,-668.7,-272.6},
{-344.4,-670.4,-267.5},
{-209.0,-672.4,-243.6},
{-94.4,-667.8,-217.2},
{29.1,-631.4,-188.6},
{128.8,-553.4,-168.0},
{216.9,-439.1,-166.2},
{272.6,-315.4,-166.7},
{282.0,-190.1,-167.9},
{283.7,-78.5,-178.6},
{284.9,44.1,-212.5},
{286.6,152.8,-241.8},
{302.9,292.2,-262.9},
{358.4,398.6,-264.2},
{478.8,464.9,-261.7},
{598.3,477.7,-258.3},
{722.5,483.3,-255.3},
{849.1,490.2,-252.8},
{951.3,543.7,-253.6},
{922.5,631.9,-247.3},
{812.5,654.7,-189.6},
{706.9,645.2,-136.0},
{605.2,652.2,-136.0},
{589.8,687.6,-136.0},
{563.9,791.3,-136.0},
{452.3,815.3,-136.0},
{330.1,809.9,-136.0},
{207.8,813.4,-136.0},
{83.7,815.7,-136.0},
{-47.5,811.8,-136.0},
{-165.2,800.0,-135.6},
{-271.8,731.8,-105.9},
{-291.0,611.2,-77.5},
{-299.5,487.1,-80.0},
{-395.4,412.4,-92.9},
{-530.8,413.5,-183.1},
{-653.4,418.0,-224.0},
{-768.6,416.6,-293.7},
{-892.4,407.4,-368.0},
{-998.7,357.7,-368.0},
{-1024.3,270.7,-368.0},
{-1023.8,155.3,-368.0},
{-1019.5,40.2,-368.0},
{-1017.1,-73.5,-368.0},
{-1017.6,-193.4,-368.0},
{-1018.5,-315.8,-368.0},
{-1015.5,-426.5,-322.7},
{-1003.2,-573.6,-288.0},
{-896.3,-597.8,-264.0},
{-787.3,-619.1,-265.1},
{-714.2,-701.3,-267.6},
{-668.5,-812.7,-264.0},
{-657.4,-925.7,-221.1},
{-656.9,-1046.2,-208.9},
{-658.0,-1182.0,-168.0},
{-660.2,-1295.1,-168.0},
{-713.4,-1393.8,-168.0},
{-826.1,-1432.2,-168.0},
{-944.4,-1427.9,-168.0},
{-1040.6,-1415.4,-166.2},
{-1152.0,-1370.3,-166.5},
{-1210.1,-1280.2,-168.0},
{-1224.6,-1173.4,-168.0},
{-1212.3,-1039.1,-168.0},
{-1182.0,-912.9,-168.0},
{-1164.0,-791.3,-168.0},
{-1159.0,-655.0,-168.0},
{-1154.5,-539.3,-168.0},
{-1161.8,-612.6,-168.0},
{-1157.2,-729.9,-168.0},
{-1162.0,-857.5,-168.0},
{-1184.0,-974.3,-168.0},
{-1205.5,-1106.8,-168.0},
{-1212.0,-1234.4,-168.0},
{-1154.1,-1343.8,-167.7},
{-1046.3,-1406.9,-166.2},
{-920.1,-1435.0,-168.0},
{-785.8,-1396.9,-168.0},
{-691.0,-1314.0,-168.0},
{-655.4,-1172.9,-168.0},
{-661.8,-1050.1,-206.9},
{-671.6,-927.0,-220.5},
{-668.0,-814.4,-264.0},
{-593.9,-715.8,-268.4},
{-465.9,-671.2,-272.7},
{-349.6,-658.8,-268.4},
{-219.0,-647.5,-245.0},
{-87.4,-625.4,-216.3},
{31.0,-572.8,-184.5},
{137.1,-490.3,-168.3},
{252.4,-428.2,-165.2},
{379.9,-456.2,-165.2},
{435.3,-550.5,-160.0},
{464.3,-675.2,-160.0},
{458.8,-792.3,-160.0},
{385.8,-876.5,-164.4},
{261.4,-870.2,-164.5},
{168.2,-797.1,-164.0},
{133.2,-675.3,-169.8},
{129.9,-558.6,-168.0},
{161.2,-436.8,-167.0},
{202.6,-311.3,-167.5},
{232.0,-186.7,-167.6},
{252.9,-49.2,-184.0},
{270.3,77.7,-218.4},
{287.4,193.9,-256.4},
{325.0,317.4,-263.1},
{400.4,414.4,-262.3},
{510.4,474.3,-260.2},
{639.9,496.9,-258.3},
{764.6,500.8,-255.4},
{910.0,493.4,-251.8},
{1020.1,483.6,-260.2},
{1145.7,466.7,-262.2},
{1244.5,405.6,-262.5},
{1269.5,272.0,-202.6},
{1269.1,164.6,-168.0},
{1267.0,41.6,-168.0},
{1264.7,-89.6,-168.0},
{1263.1,-191.1,-164.0},
{1263.3,-323.3,-164.0},
{1271.2,-455.5,-164.0},
{1288.1,-575.8,-166.7}
			};
			else if (MapID == 2)return {//Inferno
{2521.0,2017.8,140.0},
{2466.6,2110.2,132.2},
{2380.8,2271.9,132.6},
{2311.3,2431.4,132.0},
{2245.6,2599.6,133.0},
{2188.8,2737.1,130.0},
{2054.7,2821.0,124.0},
{1884.0,2824.1,124.0},
{1732.4,2816.6,124.0},
{1561.5,2804.4,124.0},
{1399.8,2800.0,124.0},
{1272.2,2883.7,128.0},
{1214.5,2995.9,128.0},
{1200.4,3086.8,128.0},
{1142.3,3178.1,128.0},
{1045.2,3241.4,128.0},
{974.8,3320.4,128.0},
{902.2,3405.1,128.0},
{812.6,3445.7,129.0},
{702.7,3445.6,151.7},
{596.5,3428.2,162.2},
{512.0,3366.4,167.0},
{472.6,3277.5,162.7},
{455.2,3162.7,161.1},
{450.7,3069.1,160.4},
{419.8,2996.4,161.5},
{325.7,2977.5,161.5},
{238.2,2947.7,161.5},
{161.1,2860.7,161.5},
{153.7,2755.9,161.5},
{197.8,2670.1,161.5},
{275.6,2593.6,161.5},
{373.3,2576.7,161.5},
{464.9,2614.8,161.5},
{546.5,2665.9,161.5},
{653.5,2673.7,146.6},
{729.9,2605.5,136.0},
{766.5,2491.0,136.0},
{771.0,2383.2,136.0},
{768.3,2274.3,136.0},
{764.2,2174.6,136.0},
{735.9,2072.1,136.0},
{652.7,2000.5,136.0},
{552.4,1963.4,136.0},
{451.0,1931.5,136.0},
{360.8,1882.4,137.0},
{301.7,1792.7,124.3},
{258.1,1688.6,116.7},
{219.2,1584.1,110.1},
{186.9,1487.0,104.9},
{158.2,1382.4,100.2},
{138.9,1276.8,95.0},
{131.5,1169.1,91.6},
{128.0,1053.1,86.1},
{113.3,955.1,82.0},
{51.4,868.9,80.0},
{-46.0,837.1,77.2},
{-167.6,829.9,40.3},
{-280.5,826.4,17.2},
{-389.0,809.3,-10.8},
{-486.8,766.0,-33.5},
{-577.8,712.3,-32.9},
{-672.4,650.9,-31.6},
{-759.5,594.4,-31.3},
{-849.6,550.8,-31.6},
{-952.2,530.7,-40.6},
{-1060.9,522.9,-58.8},
{-1150.3,513.9,-62.3},
{-1239.3,450.2,-64.0},
{-1259.0,342.0,-64.0},
{-1261.0,260.7,-64.0},
{-1277.8,175.4,-64.0},
{-1341.6,178.4,-64.0},
{-1440.7,185.1,-64.0},
{-1518.8,236.4,-64.0},
{-1532.1,353.9,-64.0},
{-1518.7,464.2,-64.0},
{-1521.8,569.3,-64.0},
{-1569.6,658.0,-64.0},
{-1641.6,631.6,-64.0},
{-1664.7,537.6,-64.0},
{-1656.2,428.9,-64.0},
{-1641.4,319.9,-64.0},
{-1614.4,209.2,-64.0},
{-1577.7,95.9,-64.0},
{-1537.0,-3.8,-64.0},
{-1481.3,-103.0,-64.0},
{-1393.0,-144.7,-15.7},
{-1282.3,-164.6,4.0},
{-1223.2,-240.4,4.0},
{-1162.4,-350.0,5.0},
{-1071.5,-384.2,4.0},
{-977.3,-386.5,4.0},
{-887.3,-360.0,4.5},
{-802.7,-306.7,-1.8},
{-712.4,-247.9,-1.1},
{-623.1,-210.4,5.5},
{-509.4,-177.7,19.4},
{-404.6,-153.9,22.0},
{-290.7,-133.8,22.0},
{-190.0,-121.1,22.0},
{-79.1,-110.1,31.2},
{28.4,-102.2,40.7},
{128.6,-96.3,45.0},
{232.4,-91.8,65.5},
{346.7,-90.2,65.5},
{444.1,-91.1,68.6},
{558.6,-95.0,71.6},
{671.3,-108.3,74.0},
{780.1,-154.7,89.0},
{846.8,-218.0,89.0},
{895.5,-321.4,89.0},
{900.6,-424.3,89.0},
{878.7,-545.8,89.0},
{808.3,-637.1,96.3},
{707.1,-664.3,92.1},
{591.7,-673.4,88.0},
{497.5,-677.0,88.0},
{389.7,-673.0,97.1},
{319.3,-660.5,96.0},
{303.2,-476.3,96.0},
{192.1,-455.2,96.0},
{107.4,-454.3,113.7},
{1.3,-453.3,183.9},
{-104.5,-452.3,192.0},
{-210.0,-451.4,192.0},
{-306.1,-450.2,192.0},
{-387.4,-391.3,192.0},
{-387.0,-288.5,194.5},
{-385.3,-164.5,192.0},
{-384.5,-46.1,192.0},
{-383.9,66.4,192.0},
{-383.2,197.9,192.0},
{-382.6,294.7,192.0},
{-296.7,303.4,192.5},
{-206.2,307.1,192.0},
{-100.5,312.4,192.0},
{-8.2,315.8,192.0},
{-28.2,187.4,201.0},
{11.0,66.0,200.5},
{-23.0,82.3,200.5},
{-29.1,85.6,200.5},
{-35.7,129.4,200.5},
{-33.8,174.7,201.0},
{-37.5,266.9,192.0},
{-116.0,329.7,192.0},
{-222.1,324.8,192.0},
{-329.5,272.2,192.0},
{-377.2,181.7,192.0},
{-395.6,58.6,192.0},
{-399.7,-62.0,192.0},
{-399.4,-174.6,192.0},
{-390.1,-278.4,194.5},
{-338.3,-372.1,192.0},
{-248.9,-431.4,192.0},
{-126.7,-453.6,192.0},
{-26.7,-455.4,192.0},
{87.5,-455.9,126.8},
{189.3,-457.0,96.0},
{289.9,-460.3,96.0},
{318.9,-575.6,96.0},
{366.8,-680.6,97.1},
{450.9,-675.8,88.0},
{561.8,-664.4,88.0},
{658.4,-656.3,89.5},
{772.9,-649.8,95.4},
{890.9,-645.8,89.0},
{988.3,-644.2,97.5},
{1115.2,-642.8,128.0},
{1208.5,-628.6,128.0},
{1222.5,-552.0,165.0},
{1222.6,-473.3,216.9},
{1223.5,-369.7,260.0},
{1224.0,-298.6,260.0},
{1296.0,-310.7,260.0},
{1424.6,-312.5,256.0},
{1542.8,-312.9,256.0},
{1655.1,-316.3,256.0},
{1785.7,-321.4,260.0},
{1844.3,-294.1,261.0},
{1868.9,-236.4,261.0},
{1978.6,-186.5,256.0},
{2068.1,-183.7,262.0},
{2291.1,-171.7,102.7},
{2290.0,-91.0,109.7},
{2290.2,38.0,117.0},
{2290.7,154.4,121.5},
{2291.1,277.4,127.4},
{2290.7,420.0,135.0},
{2290.3,540.7,141.9},
{2289.9,666.4,150.4},
{2291.0,787.8,151.8},
{2284.5,916.3,153.4},
{2238.0,1022.8,161.6},
{2133.5,1083.1,168.1},
{2006.7,1103.6,169.4},
{1881.6,1115.4,159.2},
{1758.5,1120.0,159.6},
{1633.8,1118.6,160.5},
{1530.4,1108.6,162.8},
{1445.0,1088.3,161.9},
{1418.2,985.6,153.7},
{1419.7,864.5,142.2},
{1416.4,739.4,132.9},
{1413.0,627.4,122.0},
{1410.6,516.3,119.0},
{1349.7,464.9,120.2},
{1245.2,486.8,117.9},
{1129.9,506.1,108.7},
{1011.5,513.0,99.4},
{908.2,472.4,96.0},
{837.7,370.1,94.9},
{816.9,265.8,92.1},
{814.7,147.8,90.2},
{822.6,34.9,86.7},
{832.1,-81.8,89.0},
{788.7,-162.3,89.0},
{674.3,-142.1,79.9},
{556.0,-120.8,71.1},
{438.2,-105.9,68.5},
{319.3,-103.9,65.5},
{209.6,-104.7,59.3},
{92.1,-104.8,44.1},
{-25.1,-104.2,37.7},
{-138.8,-103.2,24.0},
{-264.1,-102.2,22.0},
{-383.6,-101.2,22.0},
{-517.8,-98.8,18.4},
{-627.5,-93.4,5.0},
{-738.8,-51.6,-2.5},
{-775.7,62.8,-2.9},
{-780.2,195.1,1.0},
{-779.9,322.3,-5.7},
{-772.8,427.7,-22.4},
{-738.0,541.9,-29.9},
{-671.3,627.7,-31.8},
{-577.7,706.7,-33.1},
{-480.1,775.9,-33.3},
{-367.9,827.1,-5.1},
{-249.0,842.1,21.4},
{-134.2,841.4,54.3},
{-22.2,831.1,80.0},
{80.9,770.5,80.0},
{160.0,675.6,81.0},
{257.0,602.5,86.3},
{362.9,574.7,85.3},
{474.7,563.4,85.2},
{594.0,553.0,91.2},
{709.8,542.9,93.7},
{822.3,533.3,96.0},
{939.4,523.9,96.0},
{1049.8,518.8,102.5},
{1167.4,517.6,111.7},
{1283.9,525.8,120.0},
{1375.1,593.9,118.2},
{1408.5,697.2,129.2},
{1423.2,815.0,138.5},
{1431.0,926.0,146.4},
{1454.2,1043.5,157.4},
{1541.9,1100.2,161.4},
{1659.3,1127.8,160.8},
{1756.7,1167.8,164.6},
{1815.8,1250.9,169.0},
{1829.1,1358.6,160.0},
{1822.6,1478.1,160.0},
{1817.5,1575.6,160.0},
{1818.8,1664.0,160.0},
{1891.3,1742.2,161.3},
{2007.5,1768.9,161.0},
{2108.8,1805.2,137.9},
{2219.6,1870.0,136.7},
{2324.8,1929.0,135.4},
{2432.6,1973.6,136.1},
{2521.3,2013.6,140.7}
			};
			else if (MapID == 3)return {//Ancient
{-384.0,-2531.1,-153.9},
{-352.7,-2425.8,-163.1},
{-315.9,-2261.7,-163.3},
{-298.2,-2120.9,-163.3},
{-289.0,-2000.3,-169.2},
{-281.9,-1886.7,-175.2},
{-273.5,-1848.0,-175.2},
{-197.7,-1841.3,-158.0},
{-73.9,-1843.0,-160.0},
{50.8,-1843.9,-160.0},
{173.9,-1844.7,-160.0},
{296.5,-1845.4,-160.0},
{411.2,-1846.0,-160.0},
{513.6,-1846.6,-164.4},
{612.0,-1835.0,-159.7},
{647.1,-1727.8,-131.5},
{621.7,-1642.8,-68.5},
{650.6,-1547.1,-47.0},
{742.8,-1471.3,-2.0},
{829.3,-1413.8,-1.0},
{918.0,-1356.2,6.4},
{998.5,-1288.7,1.0},
{1062.4,-1184.3,1.0},
{1083.5,-1080.6,1.0},
{1085.0,-958.0,3.5},
{1082.4,-853.2,3.2},
{1156.9,-776.7,5.4},
{1247.7,-777.5,3.9},
{1312.5,-694.5,10.3},
{1300.3,-592.3,29.3},
{1277.7,-484.7,42.5},
{1250.6,-369.7,77.3},
{1211.0,-263.5,110.5},
{1145.4,-176.7,121.9},
{1078.0,-97.0,131.5},
{1055.9,-38.5,134.0},
{1039.8,78.2,130.9},
{1069.9,204.2,134.0},
{1141.7,286.5,124.9},
{1230.9,370.1,122.2},
{1264.6,487.1,122.8},
{1275.3,610.7,124.8},
{1268.7,728.4,120.7},
{1211.9,820.8,116.0},
{1101.1,850.5,114.2},
{996.1,854.8,113.3},
{870.8,854.4,108.4},
{723.8,846.4,110.7},
{700.3,748.2,119.1},
{692.5,651.4,121.0},
{686.9,537.2,125.8},
{688.4,417.8,125.3},
{790.3,308.3,124.1},
{836.6,262.7,130.5},
{719.3,213.3,134.0},
{612.8,186.1,140.9},
{501.3,129.6,152.7},
{466.0,23.9,152.7},
{444.2,-85.6,152.7},
{442.3,-194.1,162.0},
{455.1,-309.9,188.9},
{462.4,-431.4,183.6},
{399.7,-465.1,182.0},
{293.2,-468.6,172.0},
{198.2,-470.3,172.0},
{193.2,-541.6,172.0},
{190.0,-658.2,154.0},
{188.7,-771.5,153.0},
{143.1,-842.7,153.0},
{33.8,-822.2,153.0},
{-96.6,-803.4,153.0},
{-49.0,-798.3,153.0},
{87.4,-827.0,153.0},
{215.7,-838.8,153.0},
{337.0,-838.2,145.3},
{462.5,-832.3,125.8},
{586.3,-825.4,107.3},
{703.6,-818.6,78.8},
{842.4,-810.6,46.7},
{960.5,-802.0,9.4},
{1078.4,-781.2,5.5},
{1200.0,-725.9,9.3},
{1247.0,-625.4,29.0},
{1237.9,-479.7,43.1},
{1221.9,-355.9,82.4},
{1178.0,-239.0,113.1},
{1116.8,-139.7,130.5},
{1044.1,-31.9,134.0},
{982.5,56.9,130.9},
{914.6,152.1,130.0},
{840.7,242.2,132.5},
{751.7,350.1,126.2},
{711.4,460.7,127.7},
{687.6,579.0,123.3},
{665.2,700.6,117.6},
{628.3,846.3,113.6},
{477.7,869.9,112.8},
{358.7,868.0,105.6},
{233.4,860.1,98.8},
{121.7,829.0,82.5},
{11.4,758.0,74.0},
{-109.7,742.8,81.0},
{-246.7,763.7,77.7},
{-324.1,785.0,78.0},
{-429.3,788.2,105.0},
{-512.5,706.4,132.4},
{-527.7,577.6,162.0},
{-522.9,440.1,160.0},
{-517.4,302.9,161.2},
{-514.4,170.3,163.0},
{-513.9,59.8,119.2},
{-515.9,-79.6,74.5},
{-517.9,-200.4,56.0},
{-520.6,-326.0,55.6},
{-523.4,-453.9,38.8},
{-525.9,-578.2,33.7},
{-547.1,-711.0,32.0},
{-659.6,-753.7,32.0},
{-786.8,-775.5,36.2},
{-925.5,-798.4,33.7},
{-1040.9,-815.5,34.2},
{-1142.2,-886.7,34.8},
{-1161.3,-992.4,38.0},
{-1179.3,-1088.7,8.9},
{-1269.8,-1104.7,-3.1},
{-1395.6,-1103.8,-8.9},
{-1528.6,-1092.1,-3.4},
{-1641.4,-1028.7,-8.2},
{-1713.6,-935.5,-13.1},
{-1749.6,-825.0,26.2},
{-1766.7,-704.6,72.0},
{-1779.8,-560.1,75.0},
{-1784.6,-429.2,72.0},
{-1786.5,-296.6,72.0},
{-1788.0,-179.5,72.3},
{-1790.3,-60.1,83.0},
{-1793.7,67.8,72.0},
{-1795.8,147.8,72.9},
{-1910.7,139.5,72.0},
{-2014.6,143.8,72.0},
{-2067.2,181.7,72.0},
{-2053.7,281.2,88.0},
{-2037.9,406.2,75.0},
{-2024.2,522.3,61.4},
{-2010.3,643.0,52.0},
{-1920.7,693.1,52.0},
{-1777.8,682.5,52.0},
{-1654.0,674.5,58.3},
{-1534.2,668.4,60.4},
{-1420.3,646.6,67.7},
{-1375.1,536.2,73.0},
{-1365.4,394.8,93.0},
{-1365.2,266.8,87.0},
{-1361.0,143.2,87.0},
{-1318.5,21.4,103.0},
{-1229.4,-57.4,106.0},
{-1133.6,-123.3,103.0},
{-1023.6,-159.8,106.0},
{-898.7,-168.8,94.4},
{-776.6,-170.2,69.6},
{-665.7,-169.5,57.5},
{-561.2,-138.7,56.1},
{-523.6,-21.3,105.1},
{-518.9,102.6,141.5},
{-521.0,215.3,163.0},
{-524.9,336.2,160.0},
{-530.2,458.2,160.0},
{-536.9,585.0,162.0},
{-535.5,690.8,138.1},
{-514.4,787.2,103.5},
{-459.8,795.7,103.5},
{-353.9,790.2,88.4},
{-259.4,843.7,77.7},
{-238.2,963.2,81.0},
{-237.4,1080.1,60.0},
{-238.8,1189.7,58.5},
{-255.8,1319.2,26.1},
{-321.8,1352.1,24.5},
{-435.4,1387.5,25.4},
{-567.0,1398.8,23.0},
{-700.9,1401.1,74.0},
{-831.9,1402.2,72.0},
{-959.9,1403.3,72.0},
{-1084.1,1401.9,73.1},
{-1203.3,1393.9,102.0},
{-1312.1,1349.8,97.3},
{-1370.6,1261.0,97.3},
{-1444.3,1175.5,97.3},
{-1567.6,1154.2,99.0},
{-1675.9,1144.0,61.1},
{-1723.2,1103.2,52.0},
{-1675.5,1003.5,52.0},
{-1597.4,913.4,52.6},
{-1483.4,903.3,54.0},
{-1358.0,912.1,54.0},
{-1232.6,925.2,56.0},
{-1138.0,983.7,55.7},
{-1080.4,1087.2,68.0},
{-978.0,1112.1,66.1},
{-864.8,1110.5,69.3},
{-750.1,1108.0,67.3},
{-623.2,1105.8,64.3},
{-510.3,1104.1,64.0},
{-395.8,1099.5,62.7},
{-283.7,1049.5,69.3},
{-232.9,952.4,81.0},
{-184.5,829.6,77.7},
{-95.3,757.5,81.0},
{13.2,767.4,74.0},
{129.2,813.9,84.7},
{245.0,848.0,99.7},
{363.0,868.4,105.9},
{484.6,874.5,112.6},
{591.2,851.4,113.9},
{672.8,765.6,115.8},
{696.5,650.4,121.3},
{698.7,527.6,127.1},
{699.0,406.1,126.1},
{698.2,296.2,124.1},
{695.6,197.0,134.0},
{634.2,185.2,133.1},
{532.7,180.0,154.4},
{450.0,116.7,152.7},
{433.7,-8.4,152.7},
{432.3,-122.0,152.7},
{444.8,-234.9,162.0},
{463.9,-357.2,189.0},
{414.6,-466.3,182.0},
{312.0,-519.4,172.0},
{229.7,-595.9,172.0},
{191.6,-702.3,153.0},
{133.5,-801.5,153.0},
{18.0,-827.4,153.0},
{-103.3,-821.6,153.0},
{-224.9,-814.5,164.0},
{-344.8,-810.1,139.6},
{-449.7,-806.5,42.2},
{-560.4,-804.7,32.0},
{-683.6,-804.1,32.0},
{-806.1,-804.5,37.0},
{-930.1,-807.0,33.6},
{-1041.7,-813.2,34.2},
{-1150.7,-827.3,35.4},
{-1177.3,-912.3,35.2},
{-1169.5,-1040.5,15.1},
{-1160.8,-1171.3,-8.2},
{-1154.5,-1296.2,-22.9},
{-1149.3,-1413.8,-23.3},
{-1088.1,-1535.6,-25.1},
{-978.3,-1596.5,-46.3},
{-856.8,-1648.8,-83.8},
{-746.1,-1703.1,-126.9},
{-678.6,-1803.7,-156.1},
{-677.9,-1923.0,-170.6},
{-677.7,-2032.7,-168.0},
{-657.8,-2149.8,-156.0},
{-595.2,-2226.7,-163.3},
{-485.9,-2218.8,-163.3},
{-368.8,-2216.1,-163.3},
{-334.8,-2269.3,-163.3},
{-345.8,-2386.0,-163.3},
{-368.7,-2519.4,-154.7},
{-384.0,-2531.1,-153.9}
			};
			else if (MapID == 4)return {//Anubis
{-310.0,-1723.0,2.0},
{-443.7,-1620.4,2.0},
{-563.1,-1524.8,2.0},
{-677.8,-1434.9,2.0},
{-785.1,-1351.2,31.1},
{-886.4,-1271.2,45.1},
{-983.7,-1182.5,64.0},
{-1077.2,-1071.8,64.0},
{-1069.5,-969.3,64.0},
{-984.3,-876.2,64.0},
{-932.2,-761.7,64.0},
{-939.5,-635.6,65.2},
{-989.1,-513.5,18.2},
{-1057.9,-397.1,0.0},
{-1132.1,-274.5,2.0},
{-1214.1,-155.1,2.0},
{-1311.0,-49.8,-0.6},
{-1420.4,2.4,2.0},
{-1538.6,51.9,1.7},
{-1610.7,135.4,0.6},
{-1625.9,265.0,0.1},
{-1555.0,382.7,0.0},
{-1475.7,470.0,0.0},
{-1400.5,550.4,0.0},
{-1321.0,641.2,0.0},
{-1246.4,752.8,0.0},
{-1218.3,886.5,0.0},
{-1217.0,983.3,0.0},
{-1220.5,1105.4,0.2},
{-1224.7,1234.2,-31.0},
{-1228.6,1355.3,-31.0},
{-1230.2,1454.7,-31.0},
{-1171.5,1485.1,-31.0},
{-1049.8,1509.3,-31.0},
{-919.9,1526.7,-31.0},
{-825.0,1558.0,-31.0},
{-799.2,1631.6,-31.0},
{-792.9,1748.9,-1.3},
{-794.3,1878.8,16.1},
{-795.8,2000.1,16.1},
{-797.3,2136.4,16.1},
{-784.8,2262.3,5.6},
{-715.3,2373.1,-32.0},
{-610.6,2459.8,-53.5},
{-504.3,2538.8,-95.0},
{-393.8,2597.7,-95.0},
{-269.5,2629.1,-95.0},
{-135.6,2640.5,-95.0},
{-1.2,2644.3,-96.0},
{119.8,2644.5,-142.8},
{247.4,2637.7,-151.1},
{260.7,2572.2,-162.0},
{278.3,2437.4,-166.1},
{328.3,2292.4,-150.0},
{356.2,2190.5,-126.3},
{391.8,2096.5,-120.0},
{464.7,2033.4,-93.3},
{571.5,1983.5,-39.0},
{678.3,1947.4,-38.0},
{772.5,1960.9,-40.0},
{829.3,2042.2,-40.0},
{885.8,2124.7,-40.0},
{962.9,2196.5,-40.0},
{1016.2,2145.8,-38.0},
{1069.1,2078.0,-46.9},
{1152.2,2014.0,-192.0},
{1193.9,2030.7,-192.0},
{1256.3,2024.2,-192.0},
{1341.3,1985.8,-172.2},
{1401.3,1923.0,-150.6},
{1453.4,1839.0,-152.0},
{1508.0,1734.9,-152.0},
{1560.4,1637.1,-152.0},
{1619.4,1535.3,-152.0},
{1662.2,1438.1,-152.0},
{1675.3,1320.8,-152.0},
{1665.4,1213.5,-152.0},
{1649.1,1106.1,-152.0},
{1610.8,988.2,-150.9},
{1528.5,914.4,-152.0},
{1418.6,889.1,-152.0},
{1312.6,876.9,-152.0},
{1213.2,831.3,-152.0},
{1150.0,745.7,-150.1},
{1109.6,690.2,-166.5},
{1043.0,591.7,-188.8},
{1020.5,556.9,-178.4},
{974.0,530.0,-168.5},
{898.6,490.2,-152.4},
{880.9,481.2,-148.7},
{846.3,463.0,-141.3},
{802.4,404.9,-149.0},
{792.8,318.7,-146.0},
{790.0,201.9,-146.0},
{789.4,88.4,-146.2},
{788.9,-34.6,-120.9},
{792.0,-147.6,-96.0},
{815.3,-246.7,-60.5},
{896.2,-320.7,-32.0},
{1010.6,-359.1,-32.0},
{1127.3,-372.0,-32.0},
{1233.7,-357.0,-32.0},
{1335.2,-321.3,-32.0},
{1393.9,-281.9,-32.0},
{1407.5,-198.8,-30.5},
{1408.8,-85.6,-6.4},
{1410.7,35.3,0.0},
{1414.4,172.9,0.0},
{1413.0,294.1,0.0},
{1402.2,420.2,0.0},
{1387.0,515.7,0.0},
{1345.7,559.2,0.0},
{1290.5,553.3,2.0},
{1160.5,545.6,-95.1},
{1117.6,448.5,-149.0},
{1119.4,390.6,-149.5},
{1142.0,343.6,-152.0},
{1167.4,319.9,-146.0},
{1208.5,311.2,-146.0},
{1219.1,262.9,-146.0},
{1214.8,188.1,-146.0},
{1174.4,140.4,-146.0},
{1122.3,136.0,-149.0},
{1033.5,136.0,-149.0},
{943.0,136.0,-149.0},
{869.5,136.0,-149.0},
{782.9,125.4,-146.0},
{673.0,89.1,-152.0},
{549.6,63.5,-152.0},
{426.9,68.5,-152.0},
{305.5,83.8,-152.0},
{180.4,99.5,-151.3},
{67.1,108.6,-149.0},
{-52.8,112.6,-149.0},
{-164.4,112.4,-149.0},
{-278.8,111.8,-131.8},
{-388.8,111.2,-120.0},
{-504.7,110.5,-119.7},
{-624.3,129.6,-96.0},
{-710.2,198.2,-89.1},
{-734.2,254.6,-56.0},
{-762.6,318.1,-56.0},
{-815.0,327.2,-56.0},
{-915.3,341.7,-46.8},
{-1006.6,407.5,-18.1},
{-1012.6,468.1,1.0},
{-961.4,559.0,-4.0},
{-902.1,661.6,-4.0},
{-901.7,774.0,19.5},
{-913.3,885.1,35.0},
{-916.5,1010.3,35.0},
{-908.5,1124.5,35.0},
{-860.9,1141.2,36.0},
{-751.1,1139.2,32.0},
{-643.4,1134.2,32.0},
{-517.2,1130.2,57.0},
{-397.7,1130.0,60.0},
{-286.4,1137.9,60.0},
{-213.1,1165.9,66.0},
{-211.5,1279.2,66.0},
{-214.2,1398.7,57.1},
{-214.7,1529.3,27.0},
{-213.6,1648.3,27.0},
{-212.2,1769.3,27.0},
{-210.6,1895.9,24.6},
{-208.9,2016.7,24.0},
{-207.1,2140.5,24.0},
{-205.5,2249.3,24.0},
{-213.0,2347.7,24.0},
{-311.6,2309.3,24.0},
{-411.6,2247.5,24.0},
{-523.7,2168.1,22.0},
{-628.7,2092.2,16.1},
{-643.3,2042.7,16.1},
{-537.3,2034.3,20.1},
{-411.5,2029.6,20.8},
{-304.0,2024.6,34.0},
{-217.4,2019.8,24.0},
{-216.0,1985.1,24.0},
{-218.4,1866.2,26.9},
{-218.4,1755.6,27.0},
{-205.2,1641.5,27.0},
{-125.6,1572.8,27.0},
{-7.7,1567.1,-5.1},
{96.1,1574.0,-32.0},
{219.6,1546.4,-32.0},
{265.1,1451.8,-29.4},
{263.5,1321.9,-30.9},
{253.3,1194.6,-31.8},
{241.3,1065.5,-32.0},
{223.7,940.7,-31.9},
{156.3,867.6,-29.3},
{45.8,842.7,2.0},
{-54.8,809.8,0.3},
{-85.7,709.8,0.3},
{-86.9,595.5,0.3},
{-88.1,478.4,0.3},
{-89.9,357.3,0.3},
{-91.8,237.8,0.2},
{-93.7,116.2,0.2},
{-95.6,-6.3,0.3},
{-97.2,-110.7,0.2},
{-83.1,-218.4,0.1},
{-2.9,-294.4,0.3},
{95.0,-373.8,0.3},
{192.5,-450.4,0.3},
{296.8,-532.5,-9.4},
{395.7,-596.2,-12.0},
{493.9,-666.1,-11.8},
{550.5,-765.2,-2.0},
{575.6,-884.1,-11.6},
{585.8,-1006.1,-12.0},
{591.7,-1124.9,-12.0},
{584.9,-1246.1,-12.0},
{542.3,-1347.3,-0.7},
{455.4,-1425.3,2.0},
{339.5,-1469.7,-12.0},
{214.3,-1486.6,-12.0},
{92.8,-1494.4,-12.0},
{-31.5,-1501.4,-12.0},
{-160.8,-1511.1,-12.0},
{-277.6,-1546.0,-12.0},
{-318.9,-1724.0,2.0}
			};
			else if (MapID == 5)return {//Overpass
{-1418.9,-3493.1,316.0},
{-1400.9,-3436.2,301.5},
{-1344.7,-3332.2,282.9},
{-1275.8,-3229.0,262.9},
{-1202.8,-3126.1,242.5},
{-1125.1,-3026.6,221.9},
{-1046.4,-2938.4,202.5},
{-952.1,-2848.7,181.1},
{-856.9,-2767.3,164.0},
{-759.1,-2695.2,162.8},
{-664.4,-2638.1,158.1},
{-585.5,-2554.4,154.5},
{-562.1,-2451.4,152.0},
{-544.9,-2334.4,150.3},
{-512.9,-2230.7,148.8},
{-442.7,-2137.4,148.9},
{-341.3,-2087.2,148.9},
{-244.0,-2025.3,148.7},
{-258.3,-1996.9,148.6},
{-341.9,-1949.5,148.6},
{-458.8,-1909.3,148.4},
{-545.4,-1851.7,148.9},
{-622.2,-1745.9,149.4},
{-670.6,-1644.1,151.9},
{-691.6,-1520.7,148.8},
{-666.1,-1403.3,148.9},
{-602.5,-1337.9,148.2},
{-496.1,-1296.6,137.8},
{-414.8,-1276.5,71.2},
{-315.5,-1266.9,21.0},
{-209.5,-1253.8,31.8},
{-192.2,-1196.6,38.1},
{-211.8,-1082.2,26.5},
{-271.6,-973.8,17.7},
{-355.2,-880.8,28.4},
{-431.1,-802.3,25.6},
{-509.0,-701.2,19.5},
{-530.8,-593.6,13.9},
{-530.0,-483.1,18.5},
{-526.5,-362.5,18.0},
{-522.8,-247.9,15.5},
{-533.8,-129.8,11.1},
{-588.1,-19.6,10.9},
{-670.8,85.8,29.5},
{-762.9,177.7,74.0},
{-862.1,253.1,100.0},
{-962.7,264.9,100.0},
{-1028.5,194.2,103.5},
{-1057.3,95.1,103.5},
{-1052.1,-18.9,103.5},
{-1054.2,-118.9,103.5},
{-1123.5,-215.5,103.5},
{-1232.2,-234.4,105.6},
{-1346.8,-225.6,115.0},
{-1461.7,-210.6,135.0},
{-1578.6,-194.9,132.0},
{-1682.7,-181.2,132.0},
{-1784.2,-158.0,132.0},
{-1858.4,-79.5,132.0},
{-1898.1,30.8,132.0},
{-1950.7,132.9,132.0},
{-2023.3,192.0,132.0},
{-2102.7,241.8,132.0},
{-2113.6,296.2,132.0},
{-2053.5,398.8,108.0},
{-1967.7,494.8,108.0},
{-1893.8,579.6,108.0},
{-1833.7,685.6,132.0},
{-1799.6,805.5,132.0},
{-1782.4,910.6,166.1},
{-1774.4,1020.8,239.5},
{-1774.9,1125.8,309.4},
{-1789.0,1227.5,356.5},
{-1831.4,1292.0,357.2},
{-1936.9,1280.3,356.0},
{-2051.9,1268.9,360.0},
{-2169.3,1266.0,360.0},
{-2289.2,1278.3,360.0},
{-2373.8,1352.1,360.0},
{-2407.6,1455.4,360.0},
{-2473.8,1544.9,360.0},
{-2579.2,1594.1,366.0},
{-2664.5,1537.0,402.8},
{-2669.0,1441.3,466.4},
{-2607.6,1346.1,484.0},
{-2517.7,1299.2,484.0},
{-2462.0,1238.8,484.0},
{-2488.5,1141.3,484.0},
{-2513.3,1026.0,484.0},
{-2554.3,923.8,476.0},
{-2651.7,859.1,476.5},
{-2749.1,818.4,484.0},
{-2845.7,749.8,484.0},
{-2925.6,656.4,484.0},
{-2993.1,563.0,484.0},
{-3050.9,480.1,484.0},
{-3119.6,372.8,484.0},
{-3176.5,278.9,488.4},
{-3234.2,181.3,517.5},
{-3292.0,83.2,520.1},
{-3367.4,-14.2,522.5},
{-3454.2,-85.4,522.3},
{-3550.0,-156.2,520.1},
{-3639.6,-224.0,517.7},
{-3720.9,-311.2,517.5},
{-3741.4,-417.1,513.2},
{-3729.8,-536.5,501.3},
{-3700.4,-662.3,495.6},
{-3682.9,-774.5,495.9},
{-3678.1,-891.3,496.0},
{-3673.0,-1016.8,493.0},
{-3657.2,-1130.0,490.0},
{-3655.2,-1253.7,491.2},
{-3676.4,-1359.7,496.5},
{-3713.5,-1487.0,497.0},
{-3728.8,-1610.7,488.2},
{-3720.1,-1718.0,485.0},
{-3687.7,-1838.2,483.6},
{-3650.3,-1943.4,483.4},
{-3604.7,-2051.4,482.2},
{-3540.8,-2144.8,480.7},
{-3443.5,-2222.1,479.1},
{-3338.1,-2254.9,476.6},
{-3210.8,-2282.0,475.0},
{-3100.6,-2322.6,478.0},
{-2976.0,-2383.8,476.5},
{-2865.1,-2438.9,476.5},
{-2752.8,-2486.3,478.1},
{-2634.6,-2526.1,481.5},
{-2515.8,-2553.8,483.8},
{-2391.1,-2565.5,483.5},
{-2270.6,-2565.9,480.9},
{-2169.7,-2563.5,477.7},
{-2061.0,-2560.7,456.4},
{-1958.4,-2557.6,436.1},
{-1934.9,-2520.2,432.5},
{-1920.7,-2410.6,433.2},
{-1916.1,-2285.5,433.4},
{-1960.6,-2176.4,447.0},
{-2057.3,-2101.4,477.0},
{-2165.5,-2032.9,477.0},
{-2283.8,-1945.7,476.1},
{-2382.6,-1869.5,476.1},
{-2469.6,-1820.3,476.1},
{-2597.4,-1831.5,476.1},
{-2681.9,-1902.9,476.1},
{-2756.7,-1983.3,476.1},
{-2877.5,-2028.5,476.0},
{-2989.6,-1981.7,476.0},
{-3055.6,-1887.8,502.9},
{-3093.6,-1793.0,518.6},
{-3117.8,-1726.5,523.4},
{-3083.2,-1768.1,519.7},
{-3015.5,-1853.9,506.7},
{-2937.4,-1947.9,476.0},
{-2830.0,-1979.6,478.0},
{-2726.7,-1919.9,476.1},
{-2663.2,-1813.1,476.1},
{-2683.5,-1693.9,478.8},
{-2713.4,-1573.8,443.8},
{-2703.9,-1459.5,438.2},
{-2635.4,-1347.3,438.1},
{-2535.1,-1306.3,438.0},
{-2413.5,-1296.9,437.8},
{-2296.2,-1300.6,436.0},
{-2160.7,-1304.2,391.2},
{-2062.1,-1301.9,325.5},
{-1956.5,-1251.9,255.0},
{-1931.7,-1133.8,218.6},
{-1954.3,-1002.1,132.0},
{-1939.9,-966.5,132.0},
{-1830.6,-957.3,132.0},
{-1755.6,-1052.8,100.0},
{-1761.8,-1188.4,100.0},
{-1775.5,-1312.6,100.0},
{-1792.4,-1440.7,100.0},
{-1822.9,-1543.2,100.0},
{-1869.6,-1652.9,100.0},
{-1875.5,-1764.1,100.0},
{-1812.1,-1858.8,100.0},
{-1712.7,-1869.3,100.0},
{-1721.5,-1842.2,100.0},
{-1787.0,-1745.6,100.0},
{-1803.7,-1627.5,100.0},
{-1797.5,-1518.5,100.0},
{-1786.5,-1384.8,100.0},
{-1772.4,-1257.8,100.0},
{-1757.1,-1137.4,100.0},
{-1750.4,-1024.1,100.0},
{-1815.9,-946.9,124.0},
{-1905.3,-998.4,132.0},
{-1905.1,-1110.1,202.8},
{-1902.3,-1232.9,244.0},
{-1967.1,-1307.6,262.1},
{-2077.5,-1312.4,335.7},
{-2193.3,-1304.7,412.9},
{-2330.0,-1303.2,436.0},
{-2442.4,-1319.5,438.5},
{-2560.4,-1280.4,438.2},
{-2622.0,-1167.5,437.9},
{-2655.3,-1055.8,436.6},
{-2698.2,-944.3,436.0},
{-2804.4,-913.9,436.0},
{-2922.9,-925.4,464.6},
{-3048.4,-931.8,484.3},
{-3155.1,-909.3,492.0},
{-3269.1,-863.7,492.0},
{-3375.8,-815.8,492.0},
{-3484.4,-765.7,492.0},
{-3576.2,-706.0,492.9},
{-3646.7,-619.3,496.0},
{-3693.9,-510.4,503.5},
{-3693.2,-386.6,516.2},
{-3639.4,-278.2,519.3},
{-3554.6,-185.2,519.7},
{-3430.2,-49.6,522.5},
{-3395.5,-7.4,522.5},
{-3348.6,39.2,522.5},
{-3288.9,115.7,519.1},
{-3246.9,186.4,517.5},
{-3193.0,267.6,493.6},
{-3148.2,332.4,484.0},
{-3096.2,421.8,484.0},
{-3058.6,491.0,484.0},
{-2999.0,594.7,484.0},
{-2946.8,662.2,484.0},
{-2920.6,668.2,484.0},
{-2815.9,646.0,484.0},
{-2713.0,606.0,484.0},
{-2618.9,529.2,484.0},
{-2565.5,427.2,485.0},
{-2551.6,301.8,464.7},
{-2531.7,168.2,437.9},
{-2463.8,65.0,437.0},
{-2380.6,-25.4,431.4},
{-2307.7,-121.2,394.7},
{-2262.4,-238.6,390.1},
{-2236.0,-358.6,390.2},
{-2225.3,-470.4,390.2},
{-2225.7,-593.1,390.3},
{-2236.6,-711.8,390.9},
{-2255.3,-821.7,391.8},
{-2284.5,-933.1,394.7},
{-2337.3,-1033.0,409.3},
{-2426.0,-1119.6,437.7},
{-2526.8,-1152.0,438.1},
{-2624.9,-1105.4,437.4},
{-2666.8,-994.6,436.0},
{-2605.8,-912.5,436.0},
{-2525.2,-846.5,436.0},
{-2479.6,-729.1,436.0},
{-2477.8,-614.3,436.0},
{-2481.5,-496.4,436.0},
{-2486.7,-369.6,436.0},
{-2512.9,-250.7,436.0},
{-2588.2,-171.7,436.0},
{-2660.3,-78.9,436.1},
{-2663.8,34.9,436.9},
{-2622.6,149.4,437.7},
{-2570.0,254.7,449.4},
{-2490.2,355.7,484.9},
{-2418.5,448.2,484.0},
{-2354.3,544.4,484.0},
{-2282.2,646.5,476.5},
{-2194.2,724.6,476.0},
{-2096.6,789.9,480.2},
{-2004.1,868.3,484.0},
{-1921.9,1005.2,484.0},
{-1864.2,1109.7,468.9},
{-1824.4,1181.6,374.5},
{-1780.9,1175.0,342.2},
{-1757.2,1065.4,269.2},
{-1761.2,938.3,184.5},
{-1781.7,823.6,132.0},
{-1819.8,721.6,132.0},
{-1879.1,624.9,108.0},
{-1950.9,525.5,108.0},
{-2011.9,440.3,108.0},
{-2072.7,329.8,132.0},
{-2066.1,213.2,132.0},
{-1958.9,134.3,132.0},
{-1922.5,49.9,132.0},
{-1920.6,-63.5,132.0},
{-1925.0,-177.8,132.0},
{-1937.3,-302.9,132.0},
{-1949.8,-423.8,132.0},
{-1953.6,-534.3,132.0},
{-1885.0,-591.8,132.0},
{-1848.7,-507.8,132.0},
{-1853.6,-394.2,132.0},
{-1846.8,-267.8,132.0},
{-1758.5,-200.6,132.0},
{-1639.8,-199.3,132.0},
{-1525.3,-205.4,132.0},
{-1407.8,-209.3,128.2},
{-1277.8,-212.5,106.9},
{-1165.7,-214.9,103.6},
{-1050.2,-221.9,103.5},
{-960.5,-286.7,100.0},
{-953.3,-401.7,100.0},
{-985.2,-509.4,100.0},
{-1073.8,-568.0,100.0},
{-1191.0,-557.8,51.6},
{-1300.3,-582.5,25.7},
{-1342.1,-690.2,10.4},
{-1328.1,-820.4,15.8},
{-1288.7,-925.7,13.3},
{-1181.4,-962.1,5.4},
{-1053.6,-968.0,4.0},
{-934.5,-964.5,24.3},
{-817.4,-953.9,23.3},
{-706.7,-945.9,21.7},
{-594.1,-966.0,25.7},
{-541.5,-1065.1,33.5},
{-561.4,-1176.3,84.2},
{-594.4,-1290.1,140.0},
{-645.4,-1397.2,148.4},
{-680.6,-1515.1,149.0},
{-659.6,-1621.9,150.3},
{-623.9,-1722.0,150.5},
{-576.2,-1844.6,148.5},
{-533.8,-1951.2,148.4},
{-510.2,-2066.7,148.7},
{-536.3,-2182.0,148.6},
{-582.4,-2286.3,149.4},
{-642.9,-2387.4,150.2},
{-719.6,-2485.8,154.6},
{-809.4,-2585.1,161.1},
{-891.9,-2655.7,164.0},
{-993.6,-2725.5,171.6},
{-1097.3,-2793.0,191.5},
{-1195.6,-2861.6,210.9},
{-1280.9,-2931.2,228.9},
{-1372.5,-3010.7,248.8},
{-1467.5,-3095.2,269.7},
{-1547.7,-3169.2,287.6},
{-1604.6,-3272.6,306.4},
{-1537.9,-3364.7,311.4},
{-1460.5,-3449.3,311.9},
{-1413.8,-3488.0,316.0}
			};
			else MapID = 0;//防止崩溃
		}
	}
	void ReLoad(BOOL Timeout = false) noexcept//刷新CS2进程地址和模块地址和有效实体
	{
		if (System::Sleep_Tick<class CLASS_CS2_SDK_Timeout_Reload>(1000) || Timeout)
		{
			CS2_MEM = { "cs2.exe" };CS2_HWND = CS2_MEM.Get_ProcessHWND();
			Module_client = CS2_MEM.Get_Module("client.dll");Module_engine = CS2_MEM.Get_Module("engine.dll");Module_server = CS2_MEM.Get_Module("server.dll");Global_LocalPlayer = Base::LocalPlayer();
			if (System::Sleep_Tick<class CLASS_CS2_SDK_Offsets_Timeout_Reload>(5000) || Timeout)//自动更新偏移量延迟 (减少流量使用)
			{
				System::URL_READ URL_OFFSETS = { "Cache_CS2_Offsets" };
				if (URL_OFFSETS.StoreMem("https://github.com/shitwareofc/shitware/blob/main/Cloud%20Files/Offsets.ofs?raw=true"))//自动更新偏移量 Github更新有十分钟延迟 中国用户需要挂梯子
				{
					CS2_Offsets::Offsets_Date = URL_OFFSETS.Read(1); CS2_Offsets::Offsets_Date.erase(0, 2);//偏移更新日期 删除注释符号
					CS2_Offsets::Offsets_Date = "[" + CS2_Offsets::Offsets_Date + "]";//加上括号
					CS2_Offsets::dwLocalPlayerController = Variable::string_uint_(URL_OFFSETS.Read(4));
					CS2_Offsets::dwLocalPlayerPawn = Variable::string_uint_(URL_OFFSETS.Read(6));
					CS2_Offsets::dwEntityList = Variable::string_uint_(URL_OFFSETS.Read(8));
					CS2_Offsets::dwViewAngles = Variable::string_uint_(URL_OFFSETS.Read(10));
					CS2_Offsets::dwViewMatrix = Variable::string_uint_(URL_OFFSETS.Read(12));
					CS2_Offsets::m_hPlayerPawn = Variable::string_uint_(URL_OFFSETS.Read(14));
					CS2_Offsets::m_iTeamNum = Variable::string_uint_(URL_OFFSETS.Read(16));
					CS2_Offsets::m_ArmorValue = Variable::string_uint_(URL_OFFSETS.Read(18));
					CS2_Offsets::m_iHealth = Variable::string_uint_(URL_OFFSETS.Read(20));
					CS2_Offsets::m_iIDEntIndex = Variable::string_uint_(URL_OFFSETS.Read(22));
					CS2_Offsets::m_fFlags = Variable::string_uint_(URL_OFFSETS.Read(24));
					CS2_Offsets::m_iShotsFired = Variable::string_uint_(URL_OFFSETS.Read(26));
					CS2_Offsets::m_vecVelocity = Variable::string_uint_(URL_OFFSETS.Read(28));
					CS2_Offsets::m_bSpotted = Variable::string_uint_(URL_OFFSETS.Read(30));
					CS2_Offsets::m_bIsScoped = Variable::string_uint_(URL_OFFSETS.Read(32));
					CS2_Offsets::m_pClippingWeapon = Variable::string_uint_(URL_OFFSETS.Read(34));
					CS2_Offsets::m_pGameSceneNode = Variable::string_uint_(URL_OFFSETS.Read(36));
					CS2_Offsets::m_vecOrigin = Variable::string_uint_(URL_OFFSETS.Read(38));
					CS2_Offsets::m_aimPunchCache = Variable::string_uint_(URL_OFFSETS.Read(40));
					CS2_Offsets::m_vecViewOffset = Variable::string_uint_(URL_OFFSETS.Read(42));
					CS2_Offsets::m_dwBoneMatrix = Variable::string_uint_(URL_OFFSETS.Read(44));
					CS2_Offsets::m_iszPlayerName = Variable::string_uint_(URL_OFFSETS.Read(46));
					CS2_Offsets::m_pActionTrackingServices = Variable::string_uint_(URL_OFFSETS.Read(48));
					CS2_Offsets::m_iNumRoundKills = Variable::string_uint_(URL_OFFSETS.Read(50));
					CS2_Offsets::m_unTotalRoundDamageDealt = Variable::string_uint_(URL_OFFSETS.Read(52));
					CS2_Offsets::m_iItemDefinitionIndex = Variable::string_uint_(URL_OFFSETS.Read(54));
					CS2_Offsets::m_angEyeAngles = Variable::string_uint_(URL_OFFSETS.Read(56));
					URL_OFFSETS.Release();//释放文件
				}
				if (!Timeout)//报错项
				{
					if (!CS2_HWND)System::Log("Error: CS2 process not found", true);//未启动CS时报错
					if (CS2_Offsets::Offsets_Date == "[0000-00-00 00:00]")System::Log("Error: Unable to obtain cloud offset", true);//无法获取偏移量时报错
				}
			}
			Global_ValidClassID = {};//遍历前刷新有效实体ID
			for (short i = 0; i <= 64; ++i)//最大人数64
			{
				const auto PlayerPawn = Advanced::Traverse_Player(i);
				if (!PlayerPawn.Health() > 0 || (PlayerPawn.Origin().x == 0 && PlayerPawn.Origin().y == 0))continue;//多点检测
				Global_ValidClassID.push_back(i);
			}
		}
		Global_IsShowWindow = CS2_MEM.Get_ProcessHWND() == GetForegroundWindow();//刷新是否是最前端窗口
	}
}
using namespace CS2_SDK;
